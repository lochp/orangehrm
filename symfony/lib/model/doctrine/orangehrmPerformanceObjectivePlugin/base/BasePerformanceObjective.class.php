<?php

/**
 * BasePerformanceObjective
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $objective_name
 * @property integer $emp_number
 * @property timestamp $added_date
 * @property timestamp $modified_date
 * @property integer $status
 * @property Employee $Employee
 * @property string $description
 * @property date $target_date
 * @property string $objective_group
 * @property Doctrine_Collection $PerformanceObjectiveLog
 * @property Doctrine_Collection $PerformanceObjectiveReviewer
 * 
 * @method integer             getId()                         Returns the current record's "id" value
 * @method string              getObjectiveName()              Returns the current record's "objective_name" value
 * @method integer             getEmpNumber()                  Returns the current record's "emp_number" value
 * @method timestamp           getAddedDate()                  Returns the current record's "added_date" value
 * @method timestamp           getModifiedDate()               Returns the current record's "modified_date" value
 * @method integer             getStatus()                     Returns the current record's "status" value
 * @method Employee            getEmployee()                   Returns the current record's "Employee" value
 * @method string              getDescription()                Returns the current record's "description" value
 * @method date                getTargetDate()                 Returns the current record's "target_date" value
 * @method string              getObjectiveGroup()             Returns the current record's "objective_group" value
 * @method Doctrine_Collection getPerformanceObjectiveLog()      Returns the current record's "PerformanceObjectiveLog" collection
 * @method Doctrine_Collection getPerformanceObjectiveReviewer() Returns the current record's "PerformanceObjectiveReviewer" collection
 * @method PerformanceObjective    setId()                         Sets the current record's "id" value
 * @method PerformanceObjective    setObjectiveName()                Sets the current record's "objective_name" value
 * @method PerformanceObjective    setEmpNumber()                  Sets the current record's "emp_number" value
 * @method PerformanceObjective    setAddedDate()                  Sets the current record's "added_date" value
 * @method PerformanceObjective    setModifiedDate()               Sets the current record's "modified_date" value
 * @method PerformanceObjective    setStatus()                     Sets the current record's "status" value
 * @method PerformanceObjective    setEmployee()                   Sets the current record's "Employee" value
 * @method PerformanceObjective    setDescription()                Sets the current record's "description" value
 * @method PerformanceObjective    setTargetDate()                 Sets the current record's "target_date" value
 * @method PerformanceObjective    setObjectiveGroup()             Sets the current record's "objective_group" value
 * @method PerformanceObjective    setPerformanceObjectiveLog()      Sets the current record's "PerformanceObjectiveLog" collection
 * @method PerformanceObjective    setPerformanceObjectiveReviewer() Sets the current record's "PerformanceObjectiveReviewer" collection
 * 
 * @package    orangehrm
 * @subpackage model\performanceobjective\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePerformanceObjective extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_performance_objective');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('objective_name', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('emp_number', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('added_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('modified_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('description', 'varchar', 3000, array(
            'type' => 'string',
            'length' => 3000,
        ));
        $this->hasColumn('target_date', 'date', 25, array(
            'type' => 'date',
            'fixed' => 0,
            'unsigned' => false,
            'primary' => false,
            'notnull' => false,
            'autoincrement' => false,
            'length' => 25,
        ));
        $this->hasColumn('objective_group', 'string', 3000, array(
        		'type' => 'string',
        		'length' => 3000,
        ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Employee', array(
             'local' => 'emp_number',
             'foreign' => 'emp_number'));

        $this->hasMany('PerformanceObjectiveLog', array(
             'local' => 'id',
             'foreign' => 'performance_objective_id'));

        $this->hasMany('PerformanceObjectiveReviewer', array(
             'local' => 'id',
             'foreign' => 'performance_objective_id'));
    }
}